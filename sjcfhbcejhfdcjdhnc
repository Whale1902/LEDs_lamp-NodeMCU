#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

const char* ssid = "RustyToha2.4";
const char* password = "m6v8aze8l";


const int numLEDs = 18; // Number of LEDs in the strip
const int ledPin = D2;  // Define the LED control pin (D2/GPIO4)

int ledBrightness = 255; // Initial brightness value
int ledColors[3] = {255, 255, 255}; // Initial RGB color (White)

ESP8266WebServer server(80);

void setup() {
  Serial.begin(115200); // Start Serial communication for debugging
  pinMode(ledPin, OUTPUT);
  
  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  
  Serial.println("Connected to WiFi");
  
  // Define web server routes
  server.on("/", HTTP_GET, handleRoot);
  server.on("/set", HTTP_POST, handleSet);

  // Start the server
  server.begin();
  Serial.println("HTTP server started");
}

void loop() {
  server.handleClient();
  delay(10); // Small delay for smoother execution (optional)
}

void handleRoot() {
  Serial.println("Root endpoint accessed");
  String html = "<html><body>";
  html += "<h1>LED Strip Control</h1>";
  html += "<form action='/set' method='post'>";
  html += "<label for='red'>Red (0-255):</label><input type='number' id='red' name='red' min='0' max='255' value='" + String(ledColors[0]) + "'><br>";
  html += "<label for='green'>Green (0-255):</label><input type='number' id='green' name='green' min='0' max='255' value='" + String(ledColors[1]) + "'><br>";
  html += "<label for='blue'>Blue (0-255):</label><input type='number' id='blue' name='blue' min='0' max='255' value='" + String(ledColors[2]) + "'><br>";
  html += "<label for='brightness'>Brightness (0-255):</label><input type='range' id='brightness' name='brightness' min='0' max='255' value='" + String(ledBrightness) + "'><br>";
  html += "<input type='submit' value='Set LED Color'>";
  html += "</form>";
  html += "</body></html>";

  server.send(200, "text/html", html);
}

void handleSet() {
  Serial.println("Set endpoint accessed");
  if (server.hasArg("red") && server.hasArg("green") && server.hasArg("blue") && server.hasArg("brightness")) {
    ledColors[0] = server.arg("red").toInt();
    ledColors[1] = server.arg("green").toInt();
    ledColors[2] = server.arg("blue").toInt();
    ledBrightness = server.arg("brightness").toInt();

    analogWrite(ledPin, ledBrightness);
    for (int i = 0; i < numLEDs; i++) {
      analogWrite(ledPin, ledBrightness);
      analogWrite(ledPin, map(ledColors[0], 0, 255, 0, 1023));
      analogWrite(ledPin, map(ledColors[1], 0, 255, 0, 1023));
      analogWrite(ledPin, map(ledColors[2], 0, 255, 0, 1023));
    }

    server.send(200, "text/plain", "LED Color Set");
  } else {
    server.send(400, "text/plain", "Invalid arguments");
  }
}
