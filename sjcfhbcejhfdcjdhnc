#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <FastLED.h>

const char* ssid = "RustyToha2.4";
const char* password = "m6v8aze8l";


const int numLEDs = 18; // Number of LEDs in the strip
const int ledPin = 4;  // Define the LED control pin (D2/GPIO4)

CRGB leds[numLEDs]; // Define FastLED array for LEDs
uint8_t hue = 0; // Variable to control color transition

ESP8266WebServer server(80);

void setup() {
  Serial.begin(115200); // Start Serial communication for debugging
  FastLED.addLeds<WS2812B, D2, GRB>(leds, numLEDs); // Define LED strip type and pin

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  
  Serial.println("Connected to WiFi");
  
  // Define web server routes
  server.on("/", HTTP_GET, handleRoot);
  server.on("/set", HTTP_POST, handleSet);
  server.on("/allledsmode", HTTP_GET, handleAllLedsMode);

  // Start the server
  server.begin();
  Serial.println("HTTP server started");
}

void loop() {
  server.handleClient();

  // Call function for all LEDs mode
  allLedsMode();
  FastLED.show(); // Show the updated LED strip
  delay(10); // Small delay for smoother execution (optional)
}

void handleRoot() {
  Serial.println("Root endpoint accessed");
  String html = "<html><body>";
  html += "<h1>LED Strip Control</h1>";
  html += "<form action='/set' method='post'>";
  html += "<label for='red'>Red (0-255):</label><input type='number' id='red' name='red' min='0' max='255' value='" + String(leds[0].r) + "'><br>";
  html += "<label for='green'>Green (0-255):</label><input type='number' id='green' name='green' min='0' max='255' value='" + String(leds[0].g) + "'><br>";
  html += "<label for='blue'>Blue (0-255):</label><input type='number' id='blue' name='blue' min='0' max='255' value='" + String(leds[0].b) + "'><br>";
  html += "<label for='brightness'>Brightness (0-255):</label><input type='range' id='brightness' name='brightness' min='0' max='255' value='" + String(FastLED.getBrightness()) + "'><br>";
  html += "<input type='submit' value='Set LED Color'><br>";
  html += "<button type='button' onclick='setWarmYellow()'>Warm Yellow</button>";
  html += "<button type='button' onclick='setLightWhite()'>Light White</button>";
  html += "<button type='button' onclick='setAllLedsMode()'>All LEDs Mode</button>"; // Button for all LEDs mode
  html += "</form>";

  // JavaScript functions for setting warm yellow and light white colors
  html += "<script>";
  html += "function setWarmYellow() {";
  html += "  document.getElementById('red').value = '255';";
  html += "  document.getElementById('green').value = '255';";
  html += "  document.getElementById('blue').value = '150';";
  html += "  document.querySelector('form').submit();"; // Automatically submit the form
  html += "}";
  html += "function setLightWhite() {";
  html += "  document.getElementById('red').value = '255';";
  html += "  document.getElementById('green').value = '255';";
  html += "  document.getElementById('blue').value = '255';";
  html += "  document.querySelector('form').submit();"; // Automatically submit the form
  html += "}";
  html += "</script>";

  // JavaScript function to trigger all LEDs mode
  html += "<script>";
  html += "function setAllLedsMode() {";
  html += "  fetch('/allledsmode');"; // Trigger /allledsmode endpoint
  html += "}";
  html += "</script>";

  html += "</body></html>";

  server.send(200, "text/html", html);
}

void handleSet() {
  Serial.println("Set endpoint accessed");
  if (server.hasArg("red") && server.hasArg("green") && server.hasArg("blue") && server.hasArg("brightness")) {
    int red = server.arg("red").toInt();
    int green = server.arg("green").toInt();
    int blue = server.arg("blue").toInt();
    int brightness = server.arg("brightness").toInt();

    // Set color and brightness for the entire LED strip
    fill_solid(leds, numLEDs, CRGB(red, green, blue));
    FastLED.setBrightness(brightness);

    // Prepare the response with a JavaScript redirect to the root endpoint
    String response = "<script>window.location.replace('/');</script>";
    server.send(200, "text/html", response);
  } else {
    server.send(400, "text/plain", "Invalid arguments");
  }
}

void handleAllLedsMode() {
  // Enable all LEDs mode
  // Change hue value to trigger color transition in loop()
  hue = 0;
  server.send(200, "text/plain", "All LEDs Mode Enabled");
}

void allLedsMode() {
  // Function for gradual color transition for all LEDs
  fill_solid(leds, numLEDs, CHSV(hue, 255, 255)); // Set color for all LEDs based on hue value
  hue++; // Increment hue value for next color

  // Delay for a smooth color transition (adjust as needed)
  delay(50);
}
